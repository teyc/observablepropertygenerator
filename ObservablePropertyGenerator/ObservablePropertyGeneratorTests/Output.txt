//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CustomFileGenerators.ObservablePropertyGenerator.
//     Generator Version: 1.3.0.0
//     Runtime Version: 4.0.30319.269
//
//     Documentation, Examples, Bug Reports, Community @
//     http://CustomFileGenerators.codeplex.com
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace Namespace1.Tests
{
	partial class TestClass1<T, TT>
	{
		public string Name
		{
			get
			{
				return _name;
			}
			set
			{
				if (!Equals(_name, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeNameValueChanging(value, e);
					if (!e.Cancel)
					{
						_name = value;
						OnBeforeNameRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Name);
						OnAfterNameRaisePropertyChanged();
					}
				}
			}
		}

		public DateTime DateOfBirth
		{
			get
			{
				return _dateOfBirth;
			}
			set
			{
				if (!Equals(_dateOfBirth, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeDateOfBirthValueChanging(value, e);
					if (!e.Cancel)
					{
						_dateOfBirth = value;
						OnBeforeDateOfBirthRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.DateOfBirth);
						OnAfterDateOfBirthRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<RangeDirection> RangeDirections
		{
			get
			{
				return _rangeDirections;
			}
			set
			{
				if (!Equals(_rangeDirections, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeRangeDirectionsValueChanging(value, e);
					if (!e.Cancel)
					{
						_rangeDirections = value;
						OnBeforeRangeDirectionsRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.RangeDirections);
						OnAfterRangeDirectionsRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<State> States
		{
			get
			{
				return _states;
			}
			set
			{
				if (!Equals(_states, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeStatesValueChanging(value, e);
					if (!e.Cancel)
					{
						_states = value;
						OnBeforeStatesRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.States);
						OnAfterStatesRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<County> Counties
		{
			get
			{
				return _counties;
			}
			set
			{
				if (!Equals(_counties, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeCountiesValueChanging(value, e);
					if (!e.Cancel)
					{
						_counties = value;
						OnBeforeCountiesRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Counties);
						OnAfterCountiesRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<Country> Countries
		{
			get
			{
				return _countries;
			}
			set
			{
				if (!Equals(_countries, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeCountriesValueChanging(value, e);
					if (!e.Cancel)
					{
						_countries = value;
						OnBeforeCountriesRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Countries);
						OnAfterCountriesRaisePropertyChanged();
					}
				}
			}
		}

		public bool IsEmployee
		{
			get
			{
				return _isEmployee;
			}
			set
			{
				if (!Equals(_isEmployee, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeIsEmployeeValueChanging(value, e);
					if (!e.Cancel)
					{
						_isEmployee = value;
						OnBeforeIsEmployeeRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.IsEmployee);
						OnAfterIsEmployeeRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<Section> Sections
		{
			get
			{
				return _sections;
			}
			set
			{
				if (!Equals(_sections, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeSectionsValueChanging(value, e);
					if (!e.Cancel)
					{
						_sections = value;
						OnBeforeSectionsRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Sections);
						OnAfterSectionsRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<TownshipDirection> TownshipDirections
		{
			get
			{
				return _townshipDirections;
			}
			set
			{
				if (!Equals(_townshipDirections, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeTownshipDirectionsValueChanging(value, e);
					if (!e.Cancel)
					{
						_townshipDirections = value;
						OnBeforeTownshipDirectionsRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.TownshipDirections);
						OnAfterTownshipDirectionsRaisePropertyChanged();
					}
				}
			}
		}

		public ObservableCollection<PrincipalMeridian> PrincipalMeridians
		{
			get
			{
				return _principalMeridians;
			}
			set
			{
				if (!Equals(_principalMeridians, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforePrincipalMeridiansValueChanging(value, e);
					if (!e.Cancel)
					{
						_principalMeridians = value;
						OnBeforePrincipalMeridiansRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.PrincipalMeridians);
						OnAfterPrincipalMeridiansRaisePropertyChanged();
					}
				}
			}
		}

		public Collateral SelectedCollateral
		{
			get
			{
				return _selectedCollateral;
			}
			set
			{
				if (!Equals(_selectedCollateral, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeSelectedCollateralValueChanging(value, e);
					if (!e.Cancel)
					{
						_selectedCollateral = value;
						OnBeforeSelectedCollateralRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.SelectedCollateral);
						OnAfterSelectedCollateralRaisePropertyChanged();
					}
				}
			}
		}

		public int Age
		{
			get
			{
				return _age;
			}
			set
			{
				if (!Equals(_age, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeAgeValueChanging(value, e);
					if (!e.Cancel)
					{
						_age = value;
						OnBeforeAgeRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Age);
						OnAfterAgeRaisePropertyChanged();
					}
				}
			}
		}

		public decimal Salary
		{
			get
			{
				return _salary;
			}
			set
			{
				if (!Equals(_salary, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeSalaryValueChanging(value, e);
					if (!e.Cancel)
					{
						_salary = value;
						OnBeforeSalaryRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Salary);
						OnAfterSalaryRaisePropertyChanged();
					}
				}
			}
		}

		public DateTime MarriageDate
		{
			get
			{
				return _marriedDate;
			}
			set
			{
				if (!Equals(_marriedDate, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeMarriageDateValueChanging(value, e);
					if (!e.Cancel)
					{
						_marriedDate = value;
						OnBeforeMarriageDateRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.MarriageDate);
						OnAfterMarriageDateRaisePropertyChanged();
					}
				}
			}
		}

		public byte B
		{
			get
			{
				return _b;
			}
			set
			{
				if (!Equals(_b, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeBValueChanging(value, e);
					if (!e.Cancel)
					{
						_b = value;
						OnBeforeBRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.B);
						OnAfterBRaisePropertyChanged();
					}
				}
			}
		}

		public T TheT
		{
			get
			{
				return _theT;
			}
			set
			{
				if (!Equals(_theT, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeTheTValueChanging(value, e);
					if (!e.Cancel)
					{
						_theT = value;
						OnBeforeTheTRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.TheT);
						OnAfterTheTRaisePropertyChanged();
					}
				}
			}
		}

		public Dictionary<int, TT> Dict
		{
			get
			{
				return _dict;
			}
			set
			{
				if (!Equals(_dict, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeDictValueChanging(value, e);
					if (!e.Cancel)
					{
						_dict = value;
						OnBeforeDictRaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Dict);
						OnAfterDictRaisePropertyChanged();
					}
				}
			}
		}

		public int Int1
		{
			get
			{
				return _int1;
			}
			set
			{
				if (!Equals(_int1, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeInt1ValueChanging(value, e);
					if (!e.Cancel)
					{
						_int1 = value;
						OnBeforeInt1RaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Int1);
						OnAfterInt1RaisePropertyChanged();
					}
				}
			}
		}

		public int Int2
		{
			get
			{
				return _int2;
			}
			set
			{
				if (!Equals(_int2, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeInt2ValueChanging(value, e);
					if (!e.Cancel)
					{
						_int2 = value;
						OnBeforeInt2RaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Int2);
						OnAfterInt2RaisePropertyChanged();
					}
				}
			}
		}

		public int Int3
		{
			get
			{
				return _int3;
			}
			set
			{
				if (!Equals(_int3, value))
				{
					var e = new System.ComponentModel.CancelEventArgs();
					OnBeforeInt3ValueChanging(value, e);
					if (!e.Cancel)
					{
						_int3 = value;
						OnBeforeInt3RaisePropertyChanged();
						RaisePropertyChanged(TestClass1Properties.Int3);
						OnAfterInt3RaisePropertyChanged();
					}
				}
			}
		}

		#region Extensibility Method Definitions
		partial void OnBeforeNameValueChanging(string value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeNameRaisePropertyChanged();
		partial void OnAfterNameRaisePropertyChanged();
		partial void OnBeforeDateOfBirthValueChanging(DateTime value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeDateOfBirthRaisePropertyChanged();
		partial void OnAfterDateOfBirthRaisePropertyChanged();
		partial void OnBeforeRangeDirectionsValueChanging(ObservableCollection<RangeDirection> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeRangeDirectionsRaisePropertyChanged();
		partial void OnAfterRangeDirectionsRaisePropertyChanged();
		partial void OnBeforeStatesValueChanging(ObservableCollection<State> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeStatesRaisePropertyChanged();
		partial void OnAfterStatesRaisePropertyChanged();
		partial void OnBeforeCountiesValueChanging(ObservableCollection<County> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeCountiesRaisePropertyChanged();
		partial void OnAfterCountiesRaisePropertyChanged();
		partial void OnBeforeCountriesValueChanging(ObservableCollection<Country> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeCountriesRaisePropertyChanged();
		partial void OnAfterCountriesRaisePropertyChanged();
		partial void OnBeforeIsEmployeeValueChanging(bool value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeIsEmployeeRaisePropertyChanged();
		partial void OnAfterIsEmployeeRaisePropertyChanged();
		partial void OnBeforeSectionsValueChanging(ObservableCollection<Section> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeSectionsRaisePropertyChanged();
		partial void OnAfterSectionsRaisePropertyChanged();
		partial void OnBeforeTownshipDirectionsValueChanging(ObservableCollection<TownshipDirection> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeTownshipDirectionsRaisePropertyChanged();
		partial void OnAfterTownshipDirectionsRaisePropertyChanged();
		partial void OnBeforePrincipalMeridiansValueChanging(ObservableCollection<PrincipalMeridian> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforePrincipalMeridiansRaisePropertyChanged();
		partial void OnAfterPrincipalMeridiansRaisePropertyChanged();
		partial void OnBeforeSelectedCollateralValueChanging(Collateral value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeSelectedCollateralRaisePropertyChanged();
		partial void OnAfterSelectedCollateralRaisePropertyChanged();
		partial void OnBeforeAgeValueChanging(int value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeAgeRaisePropertyChanged();
		partial void OnAfterAgeRaisePropertyChanged();
		partial void OnBeforeSalaryValueChanging(decimal value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeSalaryRaisePropertyChanged();
		partial void OnAfterSalaryRaisePropertyChanged();
		partial void OnBeforeMarriageDateValueChanging(DateTime value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeMarriageDateRaisePropertyChanged();
		partial void OnAfterMarriageDateRaisePropertyChanged();
		partial void OnBeforeBValueChanging(byte value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeBRaisePropertyChanged();
		partial void OnAfterBRaisePropertyChanged();
		partial void OnBeforeTheTValueChanging(T value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeTheTRaisePropertyChanged();
		partial void OnAfterTheTRaisePropertyChanged();
		partial void OnBeforeDictValueChanging(Dictionary<int, TT> value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeDictRaisePropertyChanged();
		partial void OnAfterDictRaisePropertyChanged();
		partial void OnBeforeInt1ValueChanging(int value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeInt1RaisePropertyChanged();
		partial void OnAfterInt1RaisePropertyChanged();
		partial void OnBeforeInt2ValueChanging(int value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeInt2RaisePropertyChanged();
		partial void OnAfterInt2RaisePropertyChanged();
		partial void OnBeforeInt3ValueChanging(int value, System.ComponentModel.CancelEventArgs e);
		partial void OnBeforeInt3RaisePropertyChanged();
		partial void OnAfterInt3RaisePropertyChanged();
		#endregion

		public static partial class TestClass1Properties
		{
			public const string Name = "Name";
			public const string DateOfBirth = "DateOfBirth";
			public const string RangeDirections = "RangeDirections";
			public const string States = "States";
			public const string Counties = "Counties";
			public const string Countries = "Countries";
			public const string IsEmployee = "IsEmployee";
			public const string Sections = "Sections";
			public const string TownshipDirections = "TownshipDirections";
			public const string PrincipalMeridians = "PrincipalMeridians";
			public const string SelectedCollateral = "SelectedCollateral";
			public const string Age = "Age";
			public const string Salary = "Salary";
			public const string MarriageDate = "MarriageDate";
			public const string B = "B";
			public const string TheT = "TheT";
			public const string Dict = "Dict";
			public const string Int1 = "Int1";
			public const string Int2 = "Int2";
			public const string Int3 = "Int3";
		}
	}
}
